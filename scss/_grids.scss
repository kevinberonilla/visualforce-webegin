.grid {
    @extend .clearfix;
    &.negate-padding {
        margin: -#{$grid-padding};
    }
}
.column {
    display: block;
    width: 100%;
    float: left;
    &.padded {
        padding: $grid-padding;
    }
    @each $column in $column-list {
        &.#{nth($column, 1)} {
            width: nth($column, 2);
        }
        &.margin-#{nth($column, 1)} {
            margin-left: nth($column, 2);
        }
    }
    &.float-right {
        float: right;
        @each $column in $column-list {
            &.margin-#{nth($column, 1)} {
                margin-left: initial;
                margin-right: nth($column, 2);
            }
        }
    }
}
.flex-grid {
    display: flex;
    flex-wrap: wrap;
    &.negate-padding {
        margin: -#{$grid-padding};
    }
    &.no-wrap {
        flex-wrap: nowrap;
    }
    > * {
        flex: 1 1 auto;
    }
}
.flex-column {
    &.padded {
        padding: $grid-padding;
    }
    @each $column in $column-list {
        &.#{nth($column, 1)} {
            flex-grow: 0;
            flex-basis: nth($column, 2);
        }
    }
}
.grid-margin {
    &-top {
        margin-top: $grid-padding * 2;
    }
    &-bottom {
        margin-bottom: $grid-padding * 2;
    }
}
@media only screen and (max-width: $tablet-landscape-breakpoint) {
    @include breakpoint-columns($tablet-landscape-affix);
}
@media only screen and (max-width: $tablet-portrait-breakpoint) {
    @include breakpoint-columns($tablet-portrait-affix);
}
@media only screen and (max-width: $phone-breakpoint) {
    @include breakpoint-columns($phone-affix);
}